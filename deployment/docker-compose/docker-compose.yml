version: '3.1'

services:

  # Database for homes
  properties-db:
    image: postgres:15.1
    container_name: properties-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data #host:container
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  # Auxiliary UI for Database management
  properties-db-ui:
    image: michalhosna/adminer #adminer:4.8.1 #official image
    #https://github.com/michalhosna/adminer-docker
    container_name: properties-db-ui
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DRIVER=pgsql
      - ADMINER_SERVER=properties-db
      - ADMINER_USERNAME=${POSTGRES_USER}
      - ADMINER_DB=${POSTGRES_DB}
      - ADMINER_PASSWORD=${POSTGRES_PASSWORD}
      - ADMINER_AUTOLOGIN=1
      - ADMINER_NAME=Idealista Project!

  # Mlflow Tracking Server and Model Registry
  mlflow-server:
    image: ghcr.io/mlflow/mlflow:v2.7.1
    container_name: mlflow-server
    command: >
      bash -c "pip install --upgrade pip
      && pip install psycopg2-binary boto3
      && mlflow server
      --backend-store-uri=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@properties-db:5432/${POSTGRES_DB}
      --host=0.0.0.0
      --port=5000
      --artifacts-destination=s3://${S3_BUCKET_NAME}/"
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${MLFLOW_POSTGRES_DB}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000

  # MinIO as S3 for artifacts storage
  minio:
    image: minio/minio:RELEASE.2023-10-24T04-42-36Z
    container_name: minio
    restart: always
    command: "server /data --console-address :9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - '9000:9000' #api
      - '9001:9001' #ui
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  pgdata:
  minio_data:
#networks:
#  idealista-net:
